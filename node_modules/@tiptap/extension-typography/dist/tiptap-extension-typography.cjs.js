'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var core = require('@tiptap/core');
var prosemirrorInputrules = require('prosemirror-inputrules');

const leftArrow = new prosemirrorInputrules.InputRule(/<-$/, '←');
const rightArrow = new prosemirrorInputrules.InputRule(/->$/, '→');
const copyright = new prosemirrorInputrules.InputRule(/\(c\)$/, '©');
const trademark = new prosemirrorInputrules.InputRule(/\(tm\)$/, '™');
const registeredTrademark = new prosemirrorInputrules.InputRule(/\(r\)$/, '®');
const oneHalf = new prosemirrorInputrules.InputRule(/1\/2$/, '½');
const plusMinus = new prosemirrorInputrules.InputRule(/\+\/-$/, '±');
const notEqual = new prosemirrorInputrules.InputRule(/!=$/, '≠');
const laquo = new prosemirrorInputrules.InputRule(/<<$/, '«');
const raquo = new prosemirrorInputrules.InputRule(/>>$/, '»');
const multiplication = new prosemirrorInputrules.InputRule(/\d+\s?([*x])\s?\d+$/, '×');
const superscriptTwo = new prosemirrorInputrules.InputRule(/\^2$/, '²');
const superscriptThree = new prosemirrorInputrules.InputRule(/\^3$/, '³');
const oneQuarter = new prosemirrorInputrules.InputRule(/1\/4$/, '¼');
const threeQuarters = new prosemirrorInputrules.InputRule(/3\/4$/, '¾');
const Typography = core.Extension.create({
    name: 'typography',
    addInputRules() {
        return [
            prosemirrorInputrules.emDash,
            prosemirrorInputrules.ellipsis,
            prosemirrorInputrules.openDoubleQuote,
            prosemirrorInputrules.closeDoubleQuote,
            prosemirrorInputrules.openSingleQuote,
            prosemirrorInputrules.closeSingleQuote,
            leftArrow,
            rightArrow,
            copyright,
            trademark,
            registeredTrademark,
            oneHalf,
            plusMinus,
            notEqual,
            laquo,
            raquo,
            multiplication,
            superscriptTwo,
            superscriptThree,
            oneQuarter,
            threeQuarters,
        ];
    },
});

exports.Typography = Typography;
exports.copyright = copyright;
exports['default'] = Typography;
exports.laquo = laquo;
exports.leftArrow = leftArrow;
exports.multiplication = multiplication;
exports.notEqual = notEqual;
exports.oneHalf = oneHalf;
exports.oneQuarter = oneQuarter;
exports.plusMinus = plusMinus;
exports.raquo = raquo;
exports.registeredTrademark = registeredTrademark;
exports.rightArrow = rightArrow;
exports.superscriptThree = superscriptThree;
exports.superscriptTwo = superscriptTwo;
exports.threeQuarters = threeQuarters;
exports.trademark = trademark;
//# sourceMappingURL=tiptap-extension-typography.cjs.js.map
